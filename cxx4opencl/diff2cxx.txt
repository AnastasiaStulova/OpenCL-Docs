// Copyright 2019-2020 The Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

[[diff2cxx]]
=== Difference to {cpp}

{cpp} for OpenCL supports the majority of standard {cpp}17 features,
however, there are some differences that are documented in this section.

==== Restrictions to {cpp} features 

The following {cpp} language features are not supported:

  * Virtual functions ({cpp}17 `[class.virtual]`);
  * References to functions including member functions ({cpp}17 `[class.mfct]`);
  * Pointers to class member functions (in addition to the regular non-member
    functions that are already restricted in OpenCL C);
  * Exceptions ({cpp}17 `[except]`);
  * `dynamic_cast` operator ({cpp}17 `[expr.dynamic.cast]`);
  * Non-placement `new`/`delete` operators ({cpp}17
    `[expr.new]`/`[expr.delete]`);
  * Standard C++ libraries ({cpp}17 `[library]`).

Thread-safe initialization of static local objects is not guaranteed ({cpp}17
`[stmt.dcl]`) and whether an implementation provides thread-safety is
indicated by the presence of the `__cpp_threadsafe_static_init` feature
test macro.

The list above only contains extra restrictions that are not detailed in OpenCL
C. As OpenCL restricts a number of C features, the same restrictions are
inherited by C++ for OpenCL. The detailed list of C feature restrictions
is provided in `OpenCL C v2.0 section 6.9`.
